// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-rat/chi-skeleton/internal/app"
	"github.com/go-rat/chi-skeleton/internal/bootstrap"
	"github.com/go-rat/chi-skeleton/internal/data"
	"github.com/go-rat/chi-skeleton/internal/route"
	"github.com/go-rat/chi-skeleton/internal/service"
)

// Injectors from wire.go:

// initApp init application.
func initApp() (*app.App, error) {
	koanf, err := bootstrap.NewConf()
	if err != nil {
		return nil, err
	}
	db, err := bootstrap.NewDB(koanf)
	if err != nil {
		return nil, err
	}
	userRepo := data.NewUserRepo(db)
	userService := service.NewUserService(userRepo)
	http := route.NewHttp(userService)
	mux, err := bootstrap.NewRouter(http)
	if err != nil {
		return nil, err
	}
	server, err := bootstrap.NewHttp(koanf, mux)
	if err != nil {
		return nil, err
	}
	appApp := app.NewApp(koanf, mux, server, db)
	return appApp, nil
}
